#!/usr/bin/env bash
#
#/ connect - .
#/
#/ Usage:
#/   connect [connect-application] [arguments...]
#/
#/   <connect-application> can be any ... command. If the command involves a ... URL,
#/   connect will prompt to select an SSH host for the operation using `fzf`.
#/
#/ Examples:
#/   connect ssh root@127.0.0.1
#/   connect scp root@127.0.01:/root/some_file user@127.0.1:/home/user/some_file
#/
#/ OPTIONS:
#/   -h, --help - Show this help message and exit
#/   -v, --version - Show version information and exit
#/
# connect is under a MIT style licence.
# See LICENSE for the full text.
#
# This is open source! Please feel free to contribute.
# https://github.com/jnbdz/connect

VERSION="1.0.0"

usage() {
    grep '^#/' "$0" | cut -c 4-
}

version() {
    echo "connect version $VERSION"
}

ssh_host_selector() {
    local host
    # Extract Host entries from the SSH config and present them with fzf for selection
    host=$(grep '^Host ' ~/.ssh/config | awk '{print $2}' | grep -v '*' | fzf --prompt="Select SSH host: ")
    if [ -n "$host" ]; then
        return "${host}"
    else
        echo "No host selected."
    fi
}

ssh_connect() {
    local host=ssh_host_selector

}

scp_connect() {
    local host source destination
    # Example assuming the user specifies source and destination paths in the command
    # This is a simplified example; you'll likely need to adjust it based on your specific needs
    echo "Please enter the source file/path:"
    read source
    echo "Please enter the destination file/path:"
    read destination

    host=$(fzf --prompt="Select SCP host: " < ~/.ssh/config)

    if [ -n "$host" ]; then
        echo "Performing SCP to/from $host..."
        scp "$source" "$host":"$destination"
    else
        echo "No host selected."
    fi
}

case "$1" in
    ssh)
        shift
        ssh_connect
        ;;
    scp)
        scp_connect
        ;;
    aws)
	aws_connector
        ;;
    -v,--version)
        version
        exit 0
        ;;
    -h,--help)
        usage
	exit 0
        ;;
    *)
        usage
        exit 0
        ;;
esac
